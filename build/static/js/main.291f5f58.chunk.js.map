{"version":3,"sources":["components/Todos.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["tasksRequest","token","console","log","axios","get","headers","then","result","data","getTasks","setTasks","a","tasks","deleteTask","task","delete","title","filter","i","catch","error","customStyles","content","top","left","right","bottom","marginRight","transform","Todos","props","useState","modalIsOpen","setIsOpen","setTitle","closeModal","useEffect","handleClick","e","handleSubmit","preventDefault","duplicate","forEach","post","className","Box","p","Button","style","backgroundColor","color","borderRadius","fontSize","maxWidth","maxHeight","minWidth","minHeight","onClick","width","variant","type","isOpen","onRequestClose","contentLabel","onSubmit","event","mb","TextField","InputLabelProps","fullWidth","label","onChange","target","value","display","pr","map","item","IconButton","Modal","setAppElement","loginUser","credentials","setWrongCredentials","username","password","Login","setToken","setUserName","setPassword","showPassword","setShowPassword","wrongCredentials","accessToken","src","alt","pb","InputProps","endAdornment","InputAdornment","position","aria-label","helperText","size","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.291f5f58.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Button from '@material-ui/core/Button'\r\nimport Modal from 'react-modal'\r\nimport { TextField } from \"@material-ui/core\"\r\nimport Box from '@material-ui/core/Box'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport \"../tasks.css\"\r\n\r\nconst tasksRequest = (token) => {\r\n    console.log(token)\r\n    return axios.get(\"https://rudolf-task.herokuapp.com/api/tasks\", {\r\n        headers: {'Authorization': `Bearer ${token}`}\r\n    }).then(result => result.data)\r\n}\r\n\r\nconst getTasks = async (setTasks, token) => {\r\n    const tasks = await tasksRequest(token)\r\n    console.log(tasks)\r\n    setTasks(tasks)\r\n}\r\n\r\nconst deleteTask = async (task, token, setTasks, tasks) => {\r\n    axios.delete('https://rudolf-task.herokuapp.com/api/tasks', {\r\n        headers: {'Authorization': `Bearer ${token}`},\r\n        data: {title : task.title}\r\n    }).then(setTasks(tasks.filter(i => i.title !== task.title ))).catch(error => console.log(error))\r\n\r\n}\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport default function Todos(props) {\r\n    const [tasks, setTasks] = useState([])\r\n    const [modalIsOpen, setIsOpen] = useState(false)\r\n    const [title, setTitle] = useState()\r\n\r\n    useEffect(() => {\r\n        getTasks(setTasks, props.token)\r\n    }, []);\r\n\r\n    function closeModal(){\r\n        setIsOpen(false);\r\n    }\r\n    \r\n    const handleClick = async e => {\r\n        setIsOpen(true)\r\n    }\r\n\r\n    const handleSubmit = async (e, token) => {\r\n        e.preventDefault();\r\n        let duplicate = false\r\n        await tasks.forEach((i) => {\r\n            if (i.title === title) {\r\n                duplicate = true\r\n            }\r\n        })\r\n        closeModal()\r\n        if (!duplicate) {\r\n            await axios.post('https://rudolf-task.herokuapp.com/api/tasks', {\r\n                title: title\r\n            }, {\r\n                headers: {'Authorization': `Bearer ${token}`}\r\n            }).then(setTasks([...tasks, {title: title}]))\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Box p={2}>\r\n            <Button style={{\r\n                backgroundColor: \"#444D63\",\r\n                color: \"#F2F2F2\",\r\n                borderRadius: 9,\r\n                fontSize: 16,\r\n                maxWidth: '160px', maxHeight: '40px', minWidth: '160px', minHeight: '40px'\r\n            }} onClick={handleClick} width=\"300\" variant=\"contained\" type=\"submit\">Add task\r\n            </Button>\r\n            </Box>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\">\r\n                <form onSubmit={(event) => handleSubmit(event, props.token)}>\r\n                    <Box mb={3}>\r\n                        <TextField InputLabelProps={{\r\n                                style: {color: \"#C6C6C6\",\r\n                                fontSize: 18\r\n                                }\r\n                            }} \r\n                            fullWidth={true} className=\"titleField\" label=\"Title\" \r\n                            variant=\"outlined\" onChange={e => setTitle(e.target.value)}>\r\n                            </TextField>\r\n                    </Box>\r\n                    <Box style={{display: 'inline-block'}} pr={28}>\r\n                    <Button style={{\r\n                        backgroundColor: \"#444D63\",\r\n                        color: \"#F2F2F2\",\r\n                        borderRadius: 9,\r\n                        fontSize: 16,\r\n                        maxWidth: '80px', maxHeight: '40px', minWidth: '80px', minHeight: '40px'\r\n                        }} onClick={handleClick} variant=\"contained\" type=\"submit\">Add\r\n                    </Button>\r\n                    </Box>\r\n                    <Box style={{display: 'inline-block'}}>\r\n                    <Button style={{\r\n                        backgroundColor: \"#444D63\",\r\n                        color: \"#F2F2F2\",\r\n                        borderRadius: 9,\r\n                        fontSize: 16,\r\n                        maxWidth: '80px', maxHeight: '40px', minWidth: '80px', minHeight: '40px'\r\n                        }} onClick={closeModal} variant=\"contained\">Cancel\r\n                    </Button>\r\n                    </Box>\r\n                </form>\r\n            </Modal>\r\n            <div className=\"tasks\">\r\n            {tasks.map((item) => {\r\n                return (\r\n                    <div>\r\n                    <span>{item.title}</span>\r\n                    <IconButton onClick={() => deleteTask(item, props.token, setTasks, tasks)}>\r\n                        <DeleteIcon style={{fontSize: \"22px\"}} />\r\n                    </IconButton>\r\n                    </div>\r\n                )\r\n                })}\r\n            </div>\r\n        </div>\r\n        )\r\n    }","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport \"../Login.css\"\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\"\r\nimport Visibility from \"@material-ui/icons/Visibility\"\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\"\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nasync function loginUser(credentials, setWrongCredentials) {\r\n   return axios.post('https://rudolf-task.herokuapp.com/login', {\r\n       username: credentials.username,\r\n       password: credentials.password\r\n   }).then(result => result.data).catch((error) => {setWrongCredentials(true)})\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [wrongCredentials, setWrongCredentials] = useState(false)\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser({\r\n      username,\r\n      password\r\n    }, setWrongCredentials);\r\n    if (token) {\r\n      setToken(token.accessToken);\r\n    }\r\n  }\r\n\r\n    return(\r\n    <div className=\"wrapper\">\r\n      <div className=\"login-left\">\r\n        <img src=\"login_img.svg\" alt=\"login img\" className=\"login-img\"></img>\r\n      </div>\r\n      <div className=\"login-wrapper\">\r\n        <h1 className=\"logo\">The Rudolf</h1>\r\n        <h3 className=\"sign\">Sign-in!</h3>\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n          <label>\r\n            <Box width={380} mb={3}>\r\n            <TextField InputLabelProps={{\r\n                style: {color: \"#C6C6C6\",\r\n                fontSize: 18\r\n              }\r\n              }} error={wrongCredentials} fullWidth={true} className=\"loginField\" label=\"EMAIL\" \r\n                variant=\"outlined\" onChange={e => setUserName(e.target.value)}></TextField>\r\n            </Box>\r\n          </label>\r\n          <label>\r\n            <Box width={380} mb={3} pb={8}>\r\n              <TextField \r\n                InputLabelProps={{\r\n                  style: {color: \"#C6C6C6\",\r\n                  fontSize: 18\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}>\r\n                      {showPassword ? <Visibility style={{fontSize: \"22px\"}} /> : <VisibilityOff style={{fontSize: \"22px\"}}/>}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                  )\r\n                }} error={wrongCredentials} helperText={wrongCredentials ? \"Email and password don't match!\" : \"\"} \r\n                  fullWidth={true} type={showPassword ? \"text\" : \"password\"} label=\"PASSWORD\" \r\n                  variant=\"outlined\" onChange={e => setPassword(e.target.value)}>\r\n              </TextField>\r\n            </Box>\r\n          </label>\r\n          <Button style={{\r\n            backgroundColor: \"#444D63\",\r\n            color: \"#F2F2F2\",\r\n            borderRadius: 9,\r\n            fontSize: 18\r\n          }} size=\"large\" variant=\"contained\" type=\"submit\">NEXT\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    )\r\n}","import './App.css';\nimport React, { useState } from 'react';\nimport Todos from \"./components/Todos.js\"\nimport Login from \"./components/Login.js\"\n\nfunction App() {\n  const [token, setToken] = useState()\n\n  if (!token) {\n    return <Login setToken={setToken}/>\n  }\n  return (\n    <div className=\"wrapper\">\n      <Todos token={token}></Todos>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}